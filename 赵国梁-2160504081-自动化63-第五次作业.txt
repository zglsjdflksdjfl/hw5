代码
1.设计低通滤波器包括 butterworth and Gaussian (选择合适的半径，计算功率谱比),平滑测试图像test1和2;分析各自优缺点；
Butterworth低通：
close all
clear
clc
I=imread('test2.tif');
figure(1);
subplot(1,2,1);
imshow(I);
title('原始图像');
f=double(I);
F=fft2(f);
F=fftshift(F);
[P,Q]=size(F);
n_butterworth=2;
D0=100;
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=1/(1+(D(u,v)/D0)^(2*n_butterworth));
        G(u,v)=H(u,v)*F(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
subplot(1,2,2);
imshow(g);
title('butterworth低通滤波后');
imwrite(g,'test1（D0=75）.bmp');
S=0;
S1=0;
for u=1:P
    for v=1:Q
        L1=(abs (G(u,v)))^2;
        S1=S1+L1;
        L=(abs(F(u,v)))^2;
        S=S+L;
    end
end
L=S1/S
%绘制频谱图（显示为图像)
figure(2)
subplot(1,3,1);
imshow(abs(255.*F./max(max(F))));
title('测试图像的傅里叶谱');
subplot(1,3,2);
imshow(abs(H));
title('显示为图像的滤波器（D0=100）');
subplot(1,3,3);
imshow(abs(255.*G./max(max(G))));
title('滤波后图像的傅里叶谱');
Gaussian低通：
close all
clear
clc
I=imread('test2.tif');
figure(1);
subplot(1,2,1);
imshow(I);
title('原始图像');
f=double(I);
F=fft2(f);
F=fftshift(F);
[P,Q]=size(F);
D0=75;
for u=1:P
    for v=1:Q
        D(u,v)=sqrt((u-fix(P/2))^2+(v-fix(Q/2))^2);
        H(u,v)=exp(-D(u,v)^2/(2*D0^2));
        G(u,v)=F(u,v)*H(u,v);
    end
end
g=ifftshift(G);
g=ifft2(g);
g=uint8(real(g));
subplot(1,2,2);
imshow(g);
title('Gaussian低通滤波后');
S=0;
S1=0;
for i=1:P
    for j=1:Q
        L=(abs(F(i,j)))^2;%计算结果图像的功率谱
        S=S+L;
        L1=(abs(G(i,j)))^2;
        %计算源图像的功率谱
        S1=S1+L1;
    end
end
L=S1/S%计算功率谱比?%绘制频谱图（显示为图像）
figure(2)
subplot(1,3,1);
imshow(abs(255.*F./max(max(F))));
title('测试图像的傅里叶谱');
subplot(1,3,2);
imshow(abs(H));
title('显示为图像的滤波器（D0=75）');
subplot(1,3,3);
imshow(abs(255.*G./max(max(G))));
title('滤波后图像的傅里叶谱');

2.设计高通滤波器包括butterworth and Gaussian，在频域增强边缘。选择半径和计算功率谱比，测试图像test3,4：分析各自优缺点；
butterworth高通：
A=imread('test4 copy.bmp'); 
% A=imread('test3_corrupt.pgm'); f=double(A); 
F=fft2(f);  
F=fftshift(F);  
[x,y]=size(F); 
n=2; 
D0=40;  
for u=1:x
for v=1:y
D(u,v)=sqrt((u-fix(x/2))^2+(v-fix(y/2))^2);  
H(u,v)=1/(1+(D0/D(u,v))^(2*n));  
G(u,v)=H(u,v)*F(u,v);
    end
end
g=ifftshift(G); g=ifft2(g); 
B=real(g)+f; B=uint8(B); 
s=0; 
s1=0; 
for u=1:x
for v=1:y
L=(abs(G(u,v)))^2;   
s=s+L; 
 L1=(abs(F(u,v)))^2;  
s1=s1+L1;
    end
end
a=s/s1 
subplot(2,3,1);imshow(A);title('test4');  
subplot(2,3,2);imshow(B);title('D0=40 n=2');  
subplot(2,3,3);imshow(uint8(real(g)));title('滤波后图像'); 
subplot(2,3,4);imshow(abs(255.*F./max(max(F))));title('傅里叶谱'); subplot(2,3,5);imshow(abs(H));title('butterworth￡¨D0=40 n=2');  subplot(2,3,6);imshow(abs(255.*G./max(max(G))));title('滤波后图像的傅里叶谱'); 
 Gaussian高通 
% A=imread('test4 copy.bmp'); 
A=imread('test3_corrupt.pgm'); 
f=double(A); 
F=fft2(f);  
F=fftshift(F); [x,y]=size(F); D0=40;  
for u=1:x
for v=1:y
    D(u,v)=sqrt((u-fix(x/2))^2+(v-fix(y/2))^2);  
H(u,v)=1-exp(-D(u,v)^2/(2*D0*D0)); 
    G(u,v)=H(u,v)*F(u,v);
end
end
g=ifftshift(G); g=ifft2(g); 
B=real(g)+f; B=uint8(B); 
s=0; 
s1=0; 
for u=1:x
    for v=1:y
        L=(abs(G(u,v)))^2;   
s=s+L; 
 L1=(abs(F(u,v)))^2;  
s1=s1+L1;
    end
end
a=s/s1 
subplot(2,3,1);imshow(A);title('test3');  
subplot(2,3,2);imshow(B);title('D0=40');  
subplot(2,3,3);imshow(uint8(real(g)));title('滤波后图像'); 
subplot(2,3,4);imshow(abs(255.*F./max(max(F))));title('傅里叶谱'); 
subplot(2,3,5);imshow(abs(H));title('gaussian D0=40');  
subplot(2,3,6);imshow(abs(255.*G./max(max(G))));title('滤波后图像的傅里谱');

3.拉普拉斯和Unmask，对测试图像test3,4 滤波；分析各自优缺点；
laplace 
A=imread('test4 copy.bmp'); 
% A=imread('test3_corrupt.pgm'); 
f=double(A); 
F=fft2(f);  
F=fftshift(F);  
[x,y]=size(F);
for u=1:x
for v=1:y
    D(u,v)=sqrt((u-fix(x/2))^2+(v-fix(y/2))^2);  
H(u,v)=1+4*pi*pi* D(u,v)^2; 
    G(u,v)=H(u,v)*F(u,v);
end
end
g=ifftshift(G); g=ifft2(g); 
B=uint8(real(g)); 
s=0; 
s1=0; 
for u=1:x
for v=1:y
L=(abs(G(u,v)))^2;   
s=s+L; 
 L1=(abs(F(u,v)))^2;  
s1=s1+L1;
    end
end
a=s/s1 
subplot(2,3,1);
imshow(A);
title('原图); 
subplot(2,3,3);
imshow(B);
title('结果图'); 
subplot(2,3,4);
imshow(abs(255.*F./max(max(F))));
title('傅里叶谱'); 
subplot(2,3,5);
imshow(abs(255.*H./max(max(H))));
title('laplace');  
subplot(2,3,6);
imshow(abs(255.*G./max(max(G))));
title('滤波后图像的傅里叶谱'); 

unmask 
A=imread('test4 copy.bmp'); 
% A=imread('test3_corrupt.pgm'); 
f=double(A); 
F=fft2(f);  
F=fftshift(F);  
[x,y]=size(F); 
D0=60; 
for u=1:x
for v=1:y
D(u,v)=sqrt((u-fix(x/2))^2+(v-fix(y/2))^2);  
H(u,v)=1-exp(-D(u,v)^2/(2*D0^2));  
    G(u,v)=F(u,v)+H(u,v)*F(u,v);
end
end
g=ifftshift(G); g=ifft2(g); 
B=uint8(real(g)); 
s=0; 
s1=0; 
for u=1:x
for v=1:y
L=(abs(G(u,v)))^2;   
s=s+L; 
 L1=(abs(F(u,v)))^2;  
s1=s1+L1;
    end
end
a=s/s1 
subplot(2,3,1);
imshow(A);
title('原图'); 
subplot(2,3,3);
imshow(B);
title('结果图'); 
subplot(2,3,4);
imshow(abs(255.*F./max(max(F))));
title('傅里叶谱'); 
subplot(2,3,5);imshow(abs(255.*H./max(max(H))));
title('unmask');  
subplot(2,3,6);imshow(abs(255.*G./max(max(G))));
title('滤波后图像的傅里叶谱');
